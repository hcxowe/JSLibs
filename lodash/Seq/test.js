var _ = require('../lodash')

function l(...rest) {
    console.log.apply(null, rest);
}
//----------------------------------------------------------------------
var wrapped = _([1,2,3]);
var ret = wrapped.reduce(_.add);
l(ret);

ret = wrapped.map(n => n*n);
l(ret);
l(ret.value());
//----------------------------------------------------------------------
var users = [
    { 'user': 'barney',  'age': 36 },
    { 'user': 'fred',    'age': 40 },
    { 'user': 'pebbles', 'age': 1 }
  ];
   
  var youngest = _
    .chain(users)
    .sortBy('age')
    .map(function(o) {
      return o.user + ' is ' + o.age;
    })
    .head()
    .value();

l(youngest);
//----------------------------------------------------------------------
l(_([1, 2, 3])
.tap(function(array) {
// Mutate input array.
  array.pop();
})
.reverse()
.value());
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------
//----------------------------------------------------------------------